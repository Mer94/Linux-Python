"""
Задание 1.

Условие:
Дополнить проект тестами, проверяющими команды вывода списка файлов (l) и разархивирования с путями (x).

*Задание 2. *

• Установить пакет для расчёта crc32
sudo apt install libarchive-zip-perl
• Доработать проект, добавив тест команды расчёта хеша (h). Проверить, что хеш совпадает с рассчитанным командой crc32.
"""
import subprocess
import zlib

def checkout(cmd, text):
    result = subprocess.run(cmd, shell=True, stdout=subprocess.PIPE, encoding='utf-8')
    if text in result.stdout and result.returncode == 0:
        return True
    else:
        return False

def calculate_crc32(file_path):
    with open(file_path, 'rb') as file:
        data = file.read()
        crc32_hash = zlib.crc32(data)
        return crc32_hash

def test_step1():
    assert checkout("cd /home/zerg/tst; 7z a ../out/arx2", "Everything is ok"), "test1 Fail"

def test_step2():
    assert checkout("cd /home/zerg/out; 7z e arx2.7z -o/home/zerg/folder1 -y", "Everything is ok"), "test2 Fail"

def test_step3():
    assert checkout("cd /home/zerg/out; 7z t arx2.7z", "Everything is ok"), "test3 Fail"

def test_step4():
    assert checkout("cd /home/zerg/out; 7z l arx2.7z", "Everything is ok"), "test4 Fail"

def test_step5():
    assert checkout("cd /home/zerg/out; 7z x arx2.7z -o/home/zerg/folder2 -y", "Everything is ok"), "test5 Fail"

def test_step6():
    file_path = "/home/zerg/out/arx2.7z"
    crc32_hash = calculate_crc32(file_path)
    cmd_result = subprocess.run(f"cd /home/zerg/out; 7z h {file_path}", shell=True, stdout=subprocess.PIPE, encoding='utf-8')
    assert str(crc32_hash) in cmd_result.stdout, "test6 Fail"
